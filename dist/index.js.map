{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqB,M;;;;;;;;;;;;;;;;;AAEjB,qBAAK,GAAL,CAAS,MAAT,GAAkB,0BAAlB;AACA,qBAAK,GAAL,CAAS,WAAT,CAAqB,GAArB,CAAyB,KAAK,GAAL,CAAS,MAAT,CAAgB,MAAhB,EAAzB;AACA,qBAAK,GAAL,CAAS,WAAT,CAAqB,GAArB,CAAyB,KAAK,GAAL,CAAS,MAAT,CAAgB,cAAhB,CAA+B;AACtD,yBAAO,IAD+C;AAEtD,kCAAgB;AAAA,2BAAM,IAAI,eAAK,cAAT,EAAN;AAAA,mBAFsC;AAGtD,oCAAkB;AAAA,2BAAM,IAAI,eAAK,gBAAT,EAAN;AAAA;AAHoC,iBAA/B,CAAzB;;AAMA,oBAAI,CAAC,KAAK,GAAL,CAAS,WAAd,EAA2B;AACzB,uBAAK,GAAL,CAAS,WAAT,GAAuB,EAAvB;AACD;;;;;;;;;;;;;;;;;;;;;;YAIK,U,EAKA,M,EAEE,K;;;;;AAPF,0B,GAAa,eAAK,OAAL,CACjB,QAAQ,GAAR,EADiB,EAEjB,KAAK,MAAL,CAAY,cAAZ,IAA8B,oBAFb,C;;uBAKE,aAAG,MAAH,CAAU,UAAV,C;;;AAAf,sB;;AACN,oBAAI,MAAJ,EAAY;AACJ,uBADI,GACI,0BAAW,UAAX,CADJ;;;AAGV,wCAAO,KAAP,EAAc,UAAC,WAAD,EAAiB;AAC7B,0CAAO,WAAP,EAAoB,UAAC,UAAD,EAAa,cAAb,EAAgC;AAClD,6BAAK,GAAL,CAAS,WAAT,CAAqB,cAArB,IAAuC,WAAW,OAAK,GAAhB,CAAvC;AACD,qBAFD;AAGD,mBAJD;AAKD;;;;;;;;;;;;;;;;;;;;;kBA9BgB,M","file":"index.js","sourcesContent":["import Base from 'magnet-core/dist/base';\nimport router from 'koa-router';\nimport path from 'path';\nimport requireAll from 'require-all';\nimport Boom from 'boom';\nimport fs from 'mz/fs';\nimport forOwn from 'lodash/forOwn';\n\nexport default class Router extends Base {\n  async setup() {\n    this.app.router = router();\n    this.app.application.use(this.app.router.routes());\n    this.app.application.use(this.app.router.allowedMethods({\n      throw: true,\n      notImplemented: () => new Boom.notImplemented(),\n      methodNotAllowed: () => new Boom.methodNotAllowed()\n    }));\n\n    if (!this.app.controllers) {\n      this.app.controllers = {};\n    }\n  }\n\n  async start() {\n    const folderPath = path.resolve(\n      process.cwd(),\n      this.config.controllerPath || 'server/controllers'\n    );\n\n    const exists = await fs.exists(folderPath);\n    if (exists) {\n      const files = requireAll(folderPath);\n\n      forOwn(files, (controllers) => {\n        forOwn(controllers, (controller, controllerName) => {\n          this.app.controllers[controllerName] = controller(this.app);\n        });\n      });\n    }\n  }\n}\n"]}